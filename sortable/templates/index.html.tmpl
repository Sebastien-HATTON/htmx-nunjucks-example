<!DOCTYPE html>
<html lang='en' class=''>

  <head>

    <meta charset='UTF-8'>
    <title>sortable</title>

    <script src="https://unpkg.com/htmx.org@{[{ .htmx_version }]}"></script>
    <script src="https://unpkg.com/htmx-ext-client-side-templates@{[{ .htmx_ext_version }]}/client-side-templates.js"></script>
    <script src="https://unpkg.com/htmx-ext-json-enc@latest/json-enc.js"></script>
    <script src="https://unpkg.com/nunjucks@{[{ .nunjucks_version }]}/browser/nunjucks.js"></script>

    <!--sortable script-->
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@{[{ .bootstrap_version }]}/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@{[{ .bootstrap_version }]}/dist/css/bootstrap.min.css" rel="stylesheet">

  </head>

  <body>
    <div class="container" hx-ext="client-side-templates">
      <a href="https://htmx.org/examples/sortable/" class="link-primary">htmx drag & drop / sortable example</a>
      <p>

      <div class="htmx-indicator">Updating...</div>

      <form class="sortable list-group"
            hx-post="/items"
            hx-trigger="load,end"
            hx-ext="json-enc"
            nunjucks-array-template="item-template">
      </form>

      <script id="item-template" type="x-tmpl-nunjucks">
        {% for item in data %}
        <div class="list-group-item"><input type='hidden' name='item' value='{{ item.id }}'/>{{ item.name }}</div>
        {% endfor %}
      </script>

    </div>

    <script type="text/javascript">
    htmx.onLoad(function(content) {
        var sortables = content.querySelectorAll(".sortable");
        for (var i = 0; i < sortables.length; i++) {
          var sortable = sortables[i];
          var sortableInstance = new Sortable(sortable, {
              animation: 150,
              ghostClass: 'blue-background-class',
    
              // Make the `.htmx-indicator` unsortable
              filter: ".htmx-indicator",
              onMove: function (evt) {
                return evt.related.className.indexOf('htmx-indicator') === -1;
              },
    
              // Disable sorting on the `end` event
              onEnd: function (evt) {
                this.option("disabled", true);
              }
          });
    
          // Re-enable sorting on the `htmx:afterSwap` event
          sortable.addEventListener("htmx:afterSwap", function() {
            sortableInstance.option("disabled", false);
          });
        }
    })
    </script>
 
  </body>

</html>
